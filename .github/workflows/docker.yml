name: Docker

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  workflow_dispatch:

jobs:
  build-native:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Docker Setup Buildx
        uses: docker/setup-buildx-action@v1.3.0
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1 
        with:
          registry: ghcr.io
          username: ${{github.repository_owner}}
          password: ${{secrets.GITHUB_TOKEN}}
      - name: Create Buildx Runner
        run: docker buildx create --platform linux/amd64,linux/arm64 --use
      - name: Docker build
        run: docker buildx build -t ghcr.io/markusjx/weather_dashboard/native:latest --platform linux/amd64 --pull --push -f Dockerfile.native .
        #run: docker buildx build -t ghcr.io/markusjx/weather_dashboard/native:latest --platform linux/amd64,linux/arm64 --pull --push -f Dockerfile.native .

  build-jvm:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform: ["linux/amd64", "linux/arm64", "linux/arm/v7"]

    steps:
      - uses: actions/checkout@v2
      - name: Docker Setup Buildx
        uses: docker/setup-buildx-action@v1.3.0
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1 
        with:
          registry: ghcr.io
          username: ${{github.repository_owner}}
          password: ${{secrets.GITHUB_TOKEN}}
      - name: Create Buildx Runner
        run: docker buildx create --platform ${{matrix.platform}} --use
      - name: Docker build amd64
        run: docker buildx build -t ghcr.io/markusjx/weather_dashboard/jvm:latest --platform ${{matrix.platform}} --pull --push -f Dockerfile.jvm-amd64 .
        if: matrix.platform == 'linux/amd64'
      - name: Docker build arm64
        run: docker buildx build -t ghcr.io/markusjx/weather_dashboard/jvm:latest --platform ${{matrix.platform}} --pull --push -f Dockerfile.jvm-arm64 .
        if: matrix.platform == 'linux/arm64'
      - name: Docker build arm32
        run: docker buildx build -t ghcr.io/markusjx/weather_dashboard/jvm:latest --platform ${{matrix.platform}} --pull --push -f Dockerfile.jvm-arm32 .
        if: matrix.platform == 'linux/arm/v7'
